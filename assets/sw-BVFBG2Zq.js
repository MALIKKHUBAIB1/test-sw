const m=(e,t)=>t.some(n=>e instanceof n);let I,p;function x(){return I||(I=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function T(){return p||(p=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const y=new WeakMap,l=new WeakMap,f=new WeakMap;function O(e){const t=new Promise((n,r)=>{const o=()=>{e.removeEventListener("success",c),e.removeEventListener("error",s)},c=()=>{n(d(e.result)),o()},s=()=>{r(e.error),o()};e.addEventListener("success",c),e.addEventListener("error",s)});return f.set(t,e),t}function F(e){if(y.has(e))return;const t=new Promise((n,r)=>{const o=()=>{e.removeEventListener("complete",c),e.removeEventListener("error",s),e.removeEventListener("abort",s)},c=()=>{n(),o()},s=()=>{r(e.error||new DOMException("AbortError","AbortError")),o()};e.addEventListener("complete",c),e.addEventListener("error",s),e.addEventListener("abort",s)});y.set(e,t)}let w={get(e,t,n){if(e instanceof IDBTransaction){if(t==="done")return y.get(e);if(t==="store")return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return d(e[t])},set(e,t,n){return e[t]=n,!0},has(e,t){return e instanceof IDBTransaction&&(t==="done"||t==="store")?!0:t in e}};function j(e){w=e(w)}function k(e){return T().includes(e)?function(...t){return e.apply(b(this),t),d(this.request)}:function(...t){return d(e.apply(b(this),t))}}function W(e){return typeof e=="function"?k(e):(e instanceof IDBTransaction&&F(e),m(e,x())?new Proxy(e,w):e)}function d(e){if(e instanceof IDBRequest)return O(e);if(l.has(e))return l.get(e);const t=W(e);return t!==e&&(l.set(e,t),f.set(t,e)),t}const b=e=>f.get(e);function C(e,t,{blocked:n,upgrade:r,blocking:o,terminated:c}={}){const s=indexedDB.open(e,t),u=d(s);return r&&s.addEventListener("upgradeneeded",a=>{r(d(s.result),a.oldVersion,a.newVersion,d(s.transaction),a)}),n&&s.addEventListener("blocked",a=>n(a.oldVersion,a.newVersion,a)),u.then(a=>{c&&a.addEventListener("close",()=>c()),o&&a.addEventListener("versionchange",i=>o(i.oldVersion,i.newVersion,i))}).catch(()=>{}),u}const N=["get","getKey","getAll","getAllKeys","count"],V=["put","add","delete","clear"],h=new Map;function E(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&typeof t=="string"))return;if(h.get(t))return h.get(t);const n=t.replace(/FromIndex$/,""),r=t!==n,o=V.includes(n);if(!(n in(r?IDBIndex:IDBObjectStore).prototype)||!(o||N.includes(n)))return;const c=async function(s,...u){const a=this.transaction(s,o?"readwrite":"readonly");let i=a.store;return r&&(i=i.index(u.shift())),(await Promise.all([i[n](...u),o&&a.done]))[0]};return h.set(t,c),c}j(e=>({...e,get:(t,n,r)=>E(t,n)||e.get(t,n,r),has:(t,n)=>!!E(t,n)||e.has(t,n)}));const q=["continue","continuePrimaryKey","advance"],B={},g=new WeakMap,L=new WeakMap,v={get(e,t){if(!q.includes(t))return e[t];let n=B[t];return n||(n=B[t]=function(...r){g.set(this,L.get(this)[t](...r))}),n}};async function*_(...e){let t=this;if(t instanceof IDBCursor||(t=await t.openCursor(...e)),!t)return;t=t;const n=new Proxy(t,v);for(L.set(n,t),f.set(n,b(t));t;)yield n,t=await(g.get(n)||t.continue()),g.delete(n)}function P(e,t){return t===Symbol.asyncIterator&&m(e,[IDBIndex,IDBObjectStore,IDBCursor])||t==="iterate"&&m(e,[IDBIndex,IDBObjectStore])}j(e=>({...e,get(t,n,r){return P(t,n)?_:e.get(t,n,r)},has(t,n){return P(t,n)||e.has(t,n)}}));const M=C("products",1,{upgrade(e){return e.objectStoreNames.contains("products")||e.createObjectStore("products",{keyPath:"id"}),e}}),A=C("formdb",3,{upgrade(e){return e.objectStoreNames.contains("fromdb")||e.createObjectStore("formdb",{keyPath:"id"}),e}});async function K(e,t){return await(await(await(await A).transaction(e,"readwrite")).objectStore("formdb")).getAll()}async function U(e){const n=(await A).transaction("formdb","readwrite");n.objectStore("formdb").delete(e),await n.done}async function R(e){const n=await(await M).transaction(e,"readwrite");await(await n.objectStore(e)).clear(),await n.done}async function H(e,t){try{const r=(await M).transaction(e,"readwrite"),o=r.objectStore(e);t.forEach(c=>{o.put(c)}),await r.done,console.log("Data inserted successfully!")}catch(n){console.error("Error inserting data:",n)}}const $=["index.html","index.css","index.js","sw.js","offline.html","manifest.json"],D="static-v5",S="products";let G=["https://dummyjson.com/products","https://pwa-service-workder-default-rtdb.firebaseio.com/formData.json"];self.addEventListener("install",e=>{console.log("service worker installed successfully",e),e.waitUntil(caches.open(D).then(t=>t.addAll($)).catch(t=>{console.log("service worker not installed sucessfully ",t)}))});self.addEventListener("activate",e=>{console.log("active event fire ",e),e.waitUntil(caches.keys().then(t=>Promise.all(t.map(n=>{if(n!==D)return caches.delete(n)}))))});self.addEventListener("sync",e=>{e.tag==="sync-from"&&(console.log("🔄 Sync-from triggered by browser"),e.waitUntil(K("formdb").then(async t=>{for(let n of t)try{(await fetch("https://pwa-service-workder-default-rtdb.firebaseio.com/formData.json",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:n==null?void 0:n.name,email:n.email,message:n.message})})).ok&&(await U(n.id),console.log("✔️ Synced and deleted item:",n.id),self.registration.showNotification("✅ Form Synced",{body:`Message from ${n.name} synced successfully!`,icon:"https://cdn-icons-png.flaticon.com/512/8766/8766948.png"}))}catch(r){console.error("❌ Failed to sync item:",n.id,r)}})))});self.addEventListener("fetch",e=>{G.some(t=>e.request.url.startsWith(t))?e.respondWith(fetch(e.request).then(t=>t.clone().json().then(r=>(e.request.url.includes("products")&&R(S).then(()=>{H(S,r.products).then(()=>console.log("Products inserted successfully")).catch(o=>console.log("Insert error:",o))}),t))).catch(t=>(console.log("API request failed:",t),caches.match(e.request)))):e.respondWith(fetch(e.request).then(t=>caches.open(D).then(n=>(e.request.method==="GET"&&n.put(e.request,t.clone()),t))).catch(()=>(console.log("Returning from cache..."),caches.match(e.request))))});
